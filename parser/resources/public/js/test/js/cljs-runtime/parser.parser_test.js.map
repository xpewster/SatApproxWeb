{"version":3,"sources":["parser/parser_test.cljs"],"mappings":"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","names":["parser.parser-test/ex1","cljs.core/List","parser.parser/and-sym","parser.parser-test/ex2","parser.parser/or-sym","parser.parser-test/ex3","parser.parser/not-sym","parser.parser-test/ex4","cljs.test/test-var","parser.parser-test/tests","cljs.test.update_current_env_BANG_","cljs.core/conj","cljs.test/update-current-env!","cljs.core/rest","values__9153__auto__","result__9154__auto__","cljs.core.apply","cljs.test/report","cljs.core/cons","t__9190__auto__","e26398","cljs.core/=","parser.parser/parse","e26399","e26400","e26401"],"sourcesContent":["(ns parser.parser-test\r\n  (:require [cljs.test :refer [deftest testing is]]\r\n            [parser.parser :refer [parse and-sym or-sym not-sym implies-sym]]))\r\n\r\n(def ex1 (list \"1\" and-sym \"2\"))\r\n(def ex2 (list \"1\" or-sym \"2\" or-sym \"3\"))\r\n(def ex3 (list not-sym \"1\" or-sym \"2\" and-sym not-sym \"3\" or-sym \"4\"))\r\n(def ex4 (list \"(\" \"1\" or-sym \"2\" or-sym \"3\" \")\" and-sym \"5\"))\r\n\r\n(deftest tests\r\n  (testing \"Parser\"\r\n    (testing \"parse1\"\r\n      (is (= (list and-sym 1 2) (parse ex1))))\r\n    (testing \"parse2\"\r\n      (is (= (list or-sym (list or-sym 1 2) 3) (parse ex2))))\r\n    (testing \"parse3\"\r\n      (is (= (list or-sym (list or-sym (list not-sym 1) (list and-sym 2 (list not-sym 3))) 4) (parse ex3))))\r\n    (testing \"parse4\"\r\n       (is (= (list and-sym (list or-sym (list or-sym 1 2) 3) 5) (parse ex4))))))"]}